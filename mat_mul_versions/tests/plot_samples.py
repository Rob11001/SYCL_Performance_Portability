# A simple script that uses the data generated by the hypermapper to plot the steps of the bayesian search

import os 
from os.path import isfile, join
import tempfile
import shutil

for device in ["CPU", "GPU"]:

    files = [f for f in os.listdir('./{0}/samples'.format(device)) if isfile(join("./{0}/samples/".format(device), f))]

    dirpath = tempfile.mkdtemp()

    for file in files:
        src = "./{0}/samples/{1}".format(device, file)
        dest = "{0}/{1}".format(dirpath, file)
        shutil.move(src, dest)

        json_path = file[0:len(file) - 23] + ".json"
        label = ""
        if "naive" in file:
            label += "naive "
        else:
            label += "tiling "

        if "unroll" in file:
            label += "+ unroll "

        if "coarsening" in file:
            label += "+ coarsening"

        output = file[0: len(file) - 23] + ".pdf"

        command = "hm-plot-optimization-results -j ./json/{0}/{1} -i {2}/ -l '{3}' -o ./{0}/samples/plots/{4} -od ./{0}/samples/plots/ -yl 'Time(ms)' -t ''".format(device, json_path, dirpath, label, output)
        
        os.system(command)
        
        shutil.move(dest, src)

    shutil.rmtree(dirpath)
